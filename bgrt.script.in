# Load the image from the BGRT
bgrt_image = Image("bgrt.png");

# Create a sprite of the BGRT
bgrt_sprite = Sprite(bgrt_image);

bgrt_sprite.SetPosition($BGRTLEFT$, $BGRTTOP$, 1);

throbber = 1;

mode = Plymouth.GetMode();
if (mode == "suspend" || mode == "resume") {
  throbber = 0;
}

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup() {
  local.box;
  local.lock;
  local.entry;
  
  box.image = Image("box.png");
  lock.image = Image("lock.png");
  entry.image = Image("entry.png");
  
  box.sprite = Sprite(box.image);
  box.x = Window.GetWidth()  * 0.50 - box.image.GetWidth ()/2;
  box.y = Window.GetHeight() * 0.75 - box.image.GetHeight()/2;
  box.z = 2;
  box.sprite.SetPosition(box.x, box.y, box.z);
  
  lock.sprite = Sprite(lock.image);
  lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
  lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
  lock.z = box.z + 1;
  lock.sprite.SetPosition(lock.x, lock.y, lock.z);
  
  entry.sprite = Sprite(entry.image);
  entry.x = lock.x + lock.image.GetWidth();
  entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
  entry.z = box.z + 1;
  entry.sprite.SetPosition(entry.x, entry.y, entry.z);
  
  global.dialog.box = box;
  global.dialog.lock = lock;
  global.dialog.entry = entry;
  global.dialog.bullet_image = Image("bullet.png");
  dialog_opacity (1);
}
    
fun dialog_opacity(opacity) {
  dialog.box.sprite.SetOpacity (opacity);
  dialog.lock.sprite.SetOpacity (opacity);
  dialog.entry.sprite.SetOpacity (opacity);
  for (index = 0; dialog.bullet[index]; index++) {
    dialog.bullet[index].sprite.SetOpacity(opacity);
  }
  progress_box.sprite.SetOpacity (1 - opacity);
  progress_bar.sprite.SetOpacity (1 - opacity);
  anim_sprite.SetOpacity (1 - opacity);
}

fun display_normal_callback () {
  global.status = "normal";
  if (global.dialog) {
    dialog_opacity (0);
  }
}

fun display_password_callback (prompt, bullets) {
  global.status = "password";
  if (!global.dialog)
    dialog_setup();
  else
    dialog_opacity(1);
  for (index = 0; dialog.bullet[index] || index < bullets; index++) {
    if (!dialog.bullet[index]) {
      dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
      dialog.bullet[index].x = 5 + dialog.entry.x + index * (dialog.bullet_image.GetWidth() + 3);
      dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
      dialog.bullet[index].z = dialog.entry.z + 1;
      dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
    }
    if (index < bullets)
      dialog.bullet[index].sprite.SetOpacity(1);
    else
      dialog.bullet[index].sprite.SetOpacity(0);
  }
}

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#-------------------------------- Progress Bar - Throbber --------------------------------

if (throbber == 1) {
  indexnum = 0;
  while (1) {
    original_frame_image = ImageNew("circle_" + indexnum + ".png");
    frame_image[indexnum] = original_frame_image;
    if (!frame_image[indexnum])
	  break;
    indexnum++;
  }

  counter = 0;
  oddeven = 0.0;
  throbber_anim_rate = 3;
  frame_index = 0;
  frame_count = indexnum - 1;
  anim_sprite = Sprite();
  anim_sprite.SetPosition(Window.GetWidth() / 2 - 24, Window.GetHeight() * 0.80 - 24, 3);

  fun refresh_callback (p) {
    if (global.status == "normal") {
	    counter += 1;
	    oddeven = counter / throbber_anim_rate;
	    if (oddeven - Math.Int(oddeven) == 0) {
	      frame_index += 1;
	      if (frame_index > frame_count)
	        frame_index = 0;
	      anim_sprite.SetImage(frame_image[frame_index]);
	    }
    }
  }

  Plymouth.SetRefreshFunction (refresh_callback);
} else {
  progress_box.image = Image("progress_box.png");
  progress_box.sprite = Sprite(progress_box.image);

  progress_box.x = Window.GetX() + Window.GetWidth() / 2 - progress_box.image.GetWidth() / 2;
  progress_box.y = Window.GetY() + Window.GetHeight() * 80 - progress_box.image.GetHeight() / 2;
  progress_box.sprite.SetPosition(progress_box.x, progress_box.y, 1);

  progress_bar.original_image = Image("progress_bar.png");
  progress_bar.sprite = Sprite();

  progress_bar.x = Window.GetX() + Window.GetWidth()  / 2 -        progress_bar.original_image.GetWidth() / 2;
  progress_bar.y = Window.GetY() + Window.GetHeight() * 0.80  - progress_box.image.GetHeight() / 2 + (progress_box.image.GetHeight() - progress_bar.original_image.GetHeight()) / 2;
  progress_bar.sprite.SetPosition(progress_bar.x, progress_bar.y, 2);

  fun progress_callback (duration, progress) {
    if (progress_bar.image.GetWidth () != Math.Int (progress_bar.original_image.GetWidth () * progress)) {
      progress_bar.image = progress_bar.original_image.Scale(progress_bar.original_image.GetWidth(progress_bar.original_image) * progress, progress_bar.original_image.GetHeight());
      progress_bar.sprite.SetImage (progress_bar.image);
    }
  }

  Plymouth.SetBootProgressFunction(progress_callback);
}

#----------------------------------------- Quit --------------------------------

fun quit_callback () {
  progress_box.sprite.SetOpacity (0);
  progress_bar.sprite.SetOpacity (0);
  anim_sprite.SetOpacity (0);
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprite = Sprite();

fun message_callback (text) {
  prompt = Image.Text(text, 1, 1, 1, 1, "Sans 18");
  message_sprite.SetPosition((Window.GetWidth() - prompt.GetWidth()) / 2, Window.GetHeight() * 0.65, 2);
  message_sprite.SetImage(prompt);
}

Plymouth.SetMessageFunction(message_callback);

if (mode == "shutdown") {
  message_callback("Shutting down");
}

